{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\priya\\\\OneDrive\\\\Desktop\\\\Shared Wishlist App\\\\frontend\\\\src\\\\context\\\\AppContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { authAPI, wishlistAPI } from '../services/api';\nimport socketService from '../services/socket';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  auth: {\n    user: null,\n    token: localStorage.getItem('token'),\n    isLoading: false,\n    isAuthenticated: false\n  },\n  wishlists: {\n    wishlists: [],\n    currentWishlist: null,\n    isLoading: false\n  }\n};\nconst appReducer = (state, action) => {\n  var _state$wishlists$curr, _state$wishlists$curr2;\n  switch (action.type) {\n    case 'AUTH_START':\n      return {\n        ...state,\n        auth: {\n          ...state.auth,\n          isLoading: true\n        }\n      };\n    case 'AUTH_SUCCESS':\n      return {\n        ...state,\n        auth: {\n          ...state.auth,\n          user: action.payload.user,\n          token: action.payload.token,\n          isLoading: false,\n          isAuthenticated: true\n        }\n      };\n    case 'AUTH_FAILURE':\n      return {\n        ...state,\n        auth: {\n          ...state.auth,\n          user: null,\n          token: null,\n          isLoading: false,\n          isAuthenticated: false\n        }\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        auth: {\n          user: null,\n          token: null,\n          isLoading: false,\n          isAuthenticated: false\n        },\n        wishlists: {\n          wishlists: [],\n          currentWishlist: null,\n          isLoading: false\n        }\n      };\n    case 'WISHLIST_LOADING':\n      return {\n        ...state,\n        wishlists: {\n          ...state.wishlists,\n          isLoading: true\n        }\n      };\n    case 'SET_WISHLISTS':\n      return {\n        ...state,\n        wishlists: {\n          ...state.wishlists,\n          wishlists: action.payload,\n          isLoading: false\n        }\n      };\n    case 'SET_CURRENT_WISHLIST':\n      return {\n        ...state,\n        wishlists: {\n          ...state.wishlists,\n          currentWishlist: action.payload,\n          isLoading: false\n        }\n      };\n    case 'ADD_WISHLIST':\n      return {\n        ...state,\n        wishlists: {\n          ...state.wishlists,\n          wishlists: [action.payload, ...state.wishlists.wishlists],\n          isLoading: false\n        }\n      };\n    case 'UPDATE_WISHLIST':\n      return {\n        ...state,\n        wishlists: {\n          ...state.wishlists,\n          wishlists: state.wishlists.wishlists.map(w => w._id === action.payload._id ? action.payload : w),\n          currentWishlist: ((_state$wishlists$curr = state.wishlists.currentWishlist) === null || _state$wishlists$curr === void 0 ? void 0 : _state$wishlists$curr._id) === action.payload._id ? action.payload : state.wishlists.currentWishlist,\n          isLoading: false\n        }\n      };\n    case 'DELETE_WISHLIST':\n      return {\n        ...state,\n        wishlists: {\n          ...state.wishlists,\n          wishlists: state.wishlists.wishlists.filter(w => w._id !== action.payload),\n          currentWishlist: ((_state$wishlists$curr2 = state.wishlists.currentWishlist) === null || _state$wishlists$curr2 === void 0 ? void 0 : _state$wishlists$curr2._id) === action.payload ? null : state.wishlists.currentWishlist,\n          isLoading: false\n        }\n      };\n    case 'WISHLIST_ERROR':\n      return {\n        ...state,\n        wishlists: {\n          ...state.wishlists,\n          isLoading: false\n        }\n      };\n    default:\n      return state;\n  }\n};\nconst AppContext = /*#__PURE__*/createContext(undefined);\nexport const useApp = () => {\n  _s();\n  const context = useContext(AppContext);\n  if (!context) {\n    throw new Error('useApp must be used within an AppProvider');\n  }\n  return context;\n};\n_s(useApp, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AppProvider = ({\n  children\n}) => {\n  _s2();\n  const [state, dispatch] = useReducer(appReducer, initialState);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const userStr = localStorage.getItem('user');\n    if (token && userStr) {\n      try {\n        const user = JSON.parse(userStr);\n        dispatch({\n          type: 'AUTH_SUCCESS',\n          payload: {\n            user,\n            token\n          }\n        });\n        socketService.connect(token);\n      } catch (error) {\n        console.error('Error parsing user data:', error);\n        logout();\n      }\n    }\n  }, []);\n  const login = async (email, password) => {\n    try {\n      dispatch({\n        type: 'AUTH_START'\n      });\n      const response = await authAPI.login({\n        email,\n        password\n      });\n      localStorage.setItem('token', response.token);\n      localStorage.setItem('user', JSON.stringify(response.user));\n      dispatch({\n        type: 'AUTH_SUCCESS',\n        payload: {\n          user: response.user,\n          token: response.token\n        }\n      });\n      socketService.connect(response.token);\n      toast.success('Login successful!');\n    } catch (error) {\n      var _error$response, _error$response$data;\n      dispatch({\n        type: 'AUTH_FAILURE'\n      });\n      toast.error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed');\n      throw error;\n    }\n  };\n  const register = async (username, email, password) => {\n    try {\n      dispatch({\n        type: 'AUTH_START'\n      });\n      const response = await authAPI.register({\n        username,\n        email,\n        password\n      });\n      localStorage.setItem('token', response.token);\n      localStorage.setItem('user', JSON.stringify(response.user));\n      dispatch({\n        type: 'AUTH_SUCCESS',\n        payload: {\n          user: response.user,\n          token: response.token\n        }\n      });\n      socketService.connect(response.token);\n      toast.success('Registration successful!');\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      dispatch({\n        type: 'AUTH_FAILURE'\n      });\n      toast.error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed');\n      throw error;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    socketService.disconnect();\n    dispatch({\n      type: 'LOGOUT'\n    });\n    toast.success('Logged out successfully');\n  };\n  const loadWishlists = async () => {\n    try {\n      dispatch({\n        type: 'WISHLIST_LOADING'\n      });\n      const response = await wishlistAPI.getWishlists();\n      dispatch({\n        type: 'SET_WISHLISTS',\n        payload: response.wishlists\n      });\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      dispatch({\n        type: 'WISHLIST_ERROR'\n      });\n      toast.error(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Failed to load wishlists');\n    }\n  };\n  const loadWishlist = async id => {\n    try {\n      dispatch({\n        type: 'WISHLIST_LOADING'\n      });\n      const response = await wishlistAPI.getWishlist(id);\n      dispatch({\n        type: 'SET_CURRENT_WISHLIST',\n        payload: response.wishlist\n      });\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      dispatch({\n        type: 'WISHLIST_ERROR'\n      });\n      toast.error(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Failed to load wishlist');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      state,\n      dispatch,\n      login,\n      register,\n      logout,\n      loadWishlists,\n      loadWishlist\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 289,\n    columnNumber: 5\n  }, this);\n};\n_s2(AppProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AppProvider;\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","authAPI","wishlistAPI","socketService","toast","jsxDEV","_jsxDEV","initialState","auth","user","token","localStorage","getItem","isLoading","isAuthenticated","wishlists","currentWishlist","appReducer","state","action","_state$wishlists$curr","_state$wishlists$curr2","type","payload","map","w","_id","filter","AppContext","undefined","useApp","_s","context","Error","AppProvider","children","_s2","dispatch","userStr","JSON","parse","connect","error","console","logout","login","email","password","response","setItem","stringify","success","_error$response","_error$response$data","data","message","register","username","_error$response2","_error$response2$data","removeItem","disconnect","loadWishlists","getWishlists","_error$response3","_error$response3$data","loadWishlist","id","getWishlist","wishlist","_error$response4","_error$response4$data","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/priya/OneDrive/Desktop/Shared Wishlist App/frontend/src/context/AppContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect, ReactNode } from 'react';\r\nimport { User, Wishlist } from '../types';\r\nimport { authAPI, wishlistAPI } from '../services/api';\r\nimport socketService from '../services/socket';\r\nimport toast from 'react-hot-toast';\r\n\r\ninterface AuthState {\r\n  user: User | null;\r\n  token: string | null;\r\n  isLoading: boolean;\r\n  isAuthenticated: boolean;\r\n}\r\n\r\ninterface WishlistState {\r\n  wishlists: Wishlist[];\r\n  currentWishlist: Wishlist | null;\r\n  isLoading: boolean;\r\n}\r\n\r\ninterface AppState {\r\n  auth: AuthState;\r\n  wishlists: WishlistState;\r\n}\r\n\r\ntype AuthAction =\r\n  | { type: 'AUTH_START' }\r\n  | { type: 'AUTH_SUCCESS'; payload: { user: User; token: string } }\r\n  | { type: 'AUTH_FAILURE' }\r\n  | { type: 'LOGOUT' };\r\n\r\ntype WishlistAction =\r\n  | { type: 'WISHLIST_LOADING' }\r\n  | { type: 'SET_WISHLISTS'; payload: Wishlist[] }\r\n  | { type: 'SET_CURRENT_WISHLIST'; payload: Wishlist | null }\r\n  | { type: 'ADD_WISHLIST'; payload: Wishlist }\r\n  | { type: 'UPDATE_WISHLIST'; payload: Wishlist }\r\n  | { type: 'DELETE_WISHLIST'; payload: string }\r\n  | { type: 'WISHLIST_ERROR' };\r\n\r\ntype AppAction = AuthAction | WishlistAction;\r\n\r\nconst initialState: AppState = {\r\n  auth: {\r\n    user: null,\r\n    token: localStorage.getItem('token'),\r\n    isLoading: false,\r\n    isAuthenticated: false,\r\n  },\r\n  wishlists: {\r\n    wishlists: [],\r\n    currentWishlist: null,\r\n    isLoading: false,\r\n  },\r\n};\r\n\r\nconst appReducer = (state: AppState, action: AppAction): AppState => {\r\n  switch (action.type) {\r\n    case 'AUTH_START':\r\n      return {\r\n        ...state,\r\n        auth: {\r\n          ...state.auth,\r\n          isLoading: true,\r\n        },\r\n      };\r\n    case 'AUTH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        auth: {\r\n          ...state.auth,\r\n          user: action.payload.user,\r\n          token: action.payload.token,\r\n          isLoading: false,\r\n          isAuthenticated: true,\r\n        },\r\n      };\r\n    case 'AUTH_FAILURE':\r\n      return {\r\n        ...state,\r\n        auth: {\r\n          ...state.auth,\r\n          user: null,\r\n          token: null,\r\n          isLoading: false,\r\n          isAuthenticated: false,\r\n        },\r\n      };\r\n    case 'LOGOUT':\r\n      return {\r\n        ...state,\r\n        auth: {\r\n          user: null,\r\n          token: null,\r\n          isLoading: false,\r\n          isAuthenticated: false,\r\n        },\r\n        wishlists: {\r\n          wishlists: [],\r\n          currentWishlist: null,\r\n          isLoading: false,\r\n        },\r\n      };\r\n    case 'WISHLIST_LOADING':\r\n      return {\r\n        ...state,\r\n        wishlists: {\r\n          ...state.wishlists,\r\n          isLoading: true,\r\n        },\r\n      };\r\n    case 'SET_WISHLISTS':\r\n      return {\r\n        ...state,\r\n        wishlists: {\r\n          ...state.wishlists,\r\n          wishlists: action.payload,\r\n          isLoading: false,\r\n        },\r\n      };\r\n    case 'SET_CURRENT_WISHLIST':\r\n      return {\r\n        ...state,\r\n        wishlists: {\r\n          ...state.wishlists,\r\n          currentWishlist: action.payload,\r\n          isLoading: false,\r\n        },\r\n      };\r\n    case 'ADD_WISHLIST':\r\n      return {\r\n        ...state,\r\n        wishlists: {\r\n          ...state.wishlists,\r\n          wishlists: [action.payload, ...state.wishlists.wishlists],\r\n          isLoading: false,\r\n        },\r\n      };\r\n    case 'UPDATE_WISHLIST':\r\n      return {\r\n        ...state,\r\n        wishlists: {\r\n          ...state.wishlists,\r\n          wishlists: state.wishlists.wishlists.map((w) =>\r\n            w._id === action.payload._id ? action.payload : w\r\n          ),\r\n          currentWishlist: state.wishlists.currentWishlist?._id === action.payload._id\r\n            ? action.payload\r\n            : state.wishlists.currentWishlist,\r\n          isLoading: false,\r\n        },\r\n      };\r\n    case 'DELETE_WISHLIST':\r\n      return {\r\n        ...state,\r\n        wishlists: {\r\n          ...state.wishlists,\r\n          wishlists: state.wishlists.wishlists.filter((w) => w._id !== action.payload),\r\n          currentWishlist: state.wishlists.currentWishlist?._id === action.payload\r\n            ? null\r\n            : state.wishlists.currentWishlist,\r\n          isLoading: false,\r\n        },\r\n      };\r\n    case 'WISHLIST_ERROR':\r\n      return {\r\n        ...state,\r\n        wishlists: {\r\n          ...state.wishlists,\r\n          isLoading: false,\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\ninterface AppContextType {\r\n  state: AppState;\r\n  dispatch: React.Dispatch<AppAction>;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  register: (username: string, email: string, password: string) => Promise<void>;\r\n  logout: () => void;\r\n  loadWishlists: () => Promise<void>;\r\n  loadWishlist: (id: string) => Promise<void>;\r\n}\r\n\r\nconst AppContext = createContext<AppContextType | undefined>(undefined);\r\n\r\nexport const useApp = () => {\r\n  const context = useContext(AppContext);\r\n  if (!context) {\r\n    throw new Error('useApp must be used within an AppProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface AppProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AppProvider: React.FC<AppProviderProps> = ({ children }) => {\r\n  const [state, dispatch] = useReducer(appReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    const userStr = localStorage.getItem('user');\r\n    \r\n    if (token && userStr) {\r\n      try {\r\n        const user = JSON.parse(userStr);\r\n        dispatch({ type: 'AUTH_SUCCESS', payload: { user, token } });\r\n        socketService.connect(token);\r\n      } catch (error) {\r\n        console.error('Error parsing user data:', error);\r\n        logout();\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const login = async (email: string, password: string): Promise<void> => {\r\n    try {\r\n      dispatch({ type: 'AUTH_START' });\r\n      const response = await authAPI.login({ email, password });\r\n      \r\n      localStorage.setItem('token', response.token);\r\n      localStorage.setItem('user', JSON.stringify(response.user));\r\n      \r\n      dispatch({ type: 'AUTH_SUCCESS', payload: { user: response.user, token: response.token } });\r\n      socketService.connect(response.token);\r\n      \r\n      toast.success('Login successful!');\r\n    } catch (error: any) {\r\n      dispatch({ type: 'AUTH_FAILURE' });\r\n      toast.error(error.response?.data?.message || 'Login failed');\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const register = async (username: string, email: string, password: string): Promise<void> => {\r\n    try {\r\n      dispatch({ type: 'AUTH_START' });\r\n      const response = await authAPI.register({ username, email, password });\r\n      \r\n      localStorage.setItem('token', response.token);\r\n      localStorage.setItem('user', JSON.stringify(response.user));\r\n      \r\n      dispatch({ type: 'AUTH_SUCCESS', payload: { user: response.user, token: response.token } });\r\n      socketService.connect(response.token);\r\n      \r\n      toast.success('Registration successful!');\r\n    } catch (error: any) {\r\n      dispatch({ type: 'AUTH_FAILURE' });\r\n      toast.error(error.response?.data?.message || 'Registration failed');\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = (): void => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    socketService.disconnect();\r\n    dispatch({ type: 'LOGOUT' });\r\n    toast.success('Logged out successfully');\r\n  };\r\n\r\n  const loadWishlists = async (): Promise<void> => {\r\n    try {\r\n      dispatch({ type: 'WISHLIST_LOADING' });\r\n      const response = await wishlistAPI.getWishlists();\r\n      dispatch({ type: 'SET_WISHLISTS', payload: response.wishlists });\r\n    } catch (error: any) {\r\n      dispatch({ type: 'WISHLIST_ERROR' });\r\n      toast.error(error.response?.data?.message || 'Failed to load wishlists');\r\n    }\r\n  };\r\n\r\n  const loadWishlist = async (id: string): Promise<void> => {\r\n    try {\r\n      dispatch({ type: 'WISHLIST_LOADING' });\r\n      const response = await wishlistAPI.getWishlist(id);\r\n      dispatch({ type: 'SET_CURRENT_WISHLIST', payload: response.wishlist });\r\n    } catch (error: any) {\r\n      dispatch({ type: 'WISHLIST_ERROR' });\r\n      toast.error(error.response?.data?.message || 'Failed to load wishlist');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider value={{\r\n      state,\r\n      dispatch,\r\n      login,\r\n      register,\r\n      logout,\r\n      loadWishlists,\r\n      loadWishlist,\r\n    }}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}